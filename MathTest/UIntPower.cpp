#include <UIntPower.hpp>
#include <stdlib.h>
#include <memory.h>

namespace accel::MathTest {

#if defined(_M_IX86)
#define uintX_t uint32_t

    static const uint32_t a0[] = {
        0x10073cfb, 0x23a40207, 0x83f763d1, 0x2318e39e, 0xffbba209, 0xc0d3648a, 0x37dc2bc5, 0x1ea12994,
        0xac5417a6, 0x0630624f, 0x172ce140, 0x14afba8b, 0xe1f68ae9, 0x9ea55b74, 0x9923e56d, 0xd342d8a8,
        0x81414c1e, 0x3b9eacc5, 0x6bf73d33, 0x859afe9d, 0x8fa56f5d, 0xb950cf98, 0xd1c01856, 0xa72f738d,
        0x9798300f, 0x4eb3896d, 0x0c59d2dc, 0x1167c5ec, 0xd8e29ed9, 0x0f5a218a, 0x6118e50a, 0x91cc03b9,
        0xb112d76a, 0x3b1620d0, 0x58bbf0eb, 0x02bcad32, 0xeab5fbac, 0x87ca219f, 0x2436c7b3, 0xe8309024,
        0xc36cda49, 0x6c7061dd, 0x66e53039, 0xb0ed9de0, 0x16e84eb2, 0x0e264ea4, 0x6e1a951f, 0x5a1d050a,
        0xdfbb214f, 0x67c7ff8c, 0x38c75698, 0x7eeb4fd6, 0x4c89595d, 0x2c9e04e0, 0xe3bc43e0, 0x058d4176,
        0x47b5ad4a, 0x2c14066f, 0x0485c13f, 0x575b01c1, 0x45bf71a5, 0x6afd286a, 0xbf999bbd, 0x921fc7f2
    };

    static const uint32_t b0[] = {
        0x4ab6a2b6, 0xe767cb86, 0x0511d025, 0xae5d19f1, 0xbee21f03, 0xfccbe580, 0xc9af322a, 0x4871edcd,
        0x75b1fd93, 0x8d51a1f0, 0x6a02d522, 0x21c4de2c, 0x76cc2111, 0x8ae10032, 0xcbc01d5c, 0x5f4398ba,
        0xcd398153, 0x7c8eadd2, 0xd1632cd7, 0x09fcc223, 0x1c952b12, 0xdc9421a6, 0x7d8b6e07, 0x197182a9,
        0x0b9d378f, 0xa1ff5f95, 0x0b4d1d8e, 0xbf4699cd, 0x3891795c, 0x376e77e0, 0x9cfb3d37, 0x6466ee6d,
        0x9d228fc2, 0x37e9955f, 0x88546802, 0x40ac393c, 0xc3a9441e, 0xaadcf5da, 0xcb175d4c, 0xb54a618b,
        0xf488a65f, 0xb9844b53, 0x9d1d1b26, 0x9f736969, 0x8874ce3c, 0x48feb390, 0x25888a09, 0xeb585c2b,
        0xf9e0a900, 0x0461ed4c, 0xd9c43de6, 0x138884d4, 0x13ad4378, 0x3b915e3c, 0xf4891fb4, 0x23582039,
        0xcc6829c8, 0x67e78187, 0xacec8bdf, 0x6ef32642, 0x25385ca3, 0x8749e4b9, 0x02f194d3, 0x9c34667a
    };

    static const uint32_t m0[] = {
        0x33975dc2, 0x209e71dd, 0x6a60dd70, 0xf277076f, 0xd5e5b30e, 0x537032cb, 0x63c6e8fe, 0x99cf5226,
        0xb85c85ff, 0x7164b05f, 0xde00cbc4, 0xd6b0b532, 0x7fb1cfb1, 0x779a44c1, 0x0947f4b7, 0xd8cedfbb,
        0x52d39503, 0x6ef13128, 0x6ac28d2e, 0x93536ca2, 0x699cdd29, 0x8a3bdb08, 0x74cd6604, 0x23bddef8,
        0x736f5a49, 0xcb2f0709, 0xe54f20a5, 0x6d45f097, 0x5f0fb49e, 0xf4f12ff3, 0x530b38dd, 0xda491dad,
        0xb4e97b74, 0x727009c9, 0x174ebeeb, 0x22eb41b8, 0xe3eec9ce, 0x531ecc2b, 0xa4524eb1, 0x86f72ec9,
        0x73d24cd5, 0x0ca345c5, 0x09e8ae08, 0x6025f1d8, 0xf62cb767, 0xd632be4a, 0x6ebebdc7, 0xe77a1b2d,
        0x96fcd1d4, 0xaffa8f29, 0x9d5b0c06, 0x8943e603, 0x2c6ef422, 0x94d66855, 0x0f9b32b1, 0x50daa1d0,
        0xdcf9a27a, 0x41a13c08, 0xa9f39180, 0x1e9915b9, 0x69e935a9, 0xa9355323, 0x754bf0e7, 0xf92a3407
    };

    static const uint32_t c0[] = {
        0x1d0d6c19, 0x1f29bb6a, 0x51c724e1, 0x74f59ac3, 0x89ee7ebf, 0x4e300675, 0x52ad79ed, 0x545399f0,
        0x9bffcf0f, 0x25adcefc, 0xbbbddef0, 0x117d0021, 0x4b887af0, 0x1655f6da, 0x0274451b, 0x4331a687,
        0x1d10c6ed, 0x6625a831, 0x6799de87, 0x842ceacf, 0x69189069, 0x65984770, 0x33f28a04, 0x1c340505,
        0x642427d4, 0x23e0394b, 0x99f3e12d, 0x0c408325, 0x11a1f471, 0x8ddd5ba8, 0x5082c77f, 0x01da264d,
        0x0d693024, 0x17cac983, 0x0c7d13e3, 0x0c3b7070, 0x6cac003e, 0x40817443, 0x78beccec, 0x424bea4a,
        0x3623b741, 0x0420a276, 0x054fc571, 0x0bfbb060, 0xe9dbf6df, 0x46a654a6, 0x1086087e, 0x98e63158,
        0x0b6025d5, 0x7ad4d668, 0x262296d8, 0x10b00773, 0x14a1fff9, 0x5b780d73, 0x0dd30b14, 0x012fd4e0,
        0x213fa162, 0x20700dcf, 0x3efb6f3f, 0x1792ffcb, 0x488176e4, 0x2db93098, 0x0fd3385e, 0x6b11e213
    };

#elif defined(_M_X64)
#define uintX_t uint64_t

    static const uint64_t a0[] = {
        0x1c659b76a5ac53a7, 0xb5d40d972632eaed, 0x9c5b848f8fa82aac, 0x8d1f0b99698ded1d, 0x6dc09edefe2fad4e, 0x1c79aa9f1794e5cb, 0x1d77ac51b01f5eda, 0xe71696f41c1fe930,
        0x8c0d12c9de67d4b1, 0xccf0ca3c15a2b297, 0x5337f96f00d0c853, 0xacd5fc4f90723c42, 0x984c52fcace48b31, 0x64f2d1b92fece96c, 0xf28fddb907a9284f, 0x33055d74fb9ce009,
        0x8391785700a91261, 0x27c10cd9282d1e5a, 0x1fcbb2dad8d4b51f, 0x6128bef1a6c3733c, 0xf179303a2f09d07a, 0x6e702a0dcc5105af, 0x1b200f4c12349fe2, 0x518a49f000c3a83d,
        0xd0d561b06ec8f3a7, 0xf8260786b4d9952e, 0xe240ad765ffa58d7, 0xe9ed9701183dadbc, 0x02127bc1bbceaf78, 0xc43c7c3a6f2f17a0, 0x9b2d8b0b5cef8bf0, 0xacb972a56d13badd,
        0xde0504c95f79823d, 0xad75efb4ae0de5be, 0x0fd0a40f474b3a47, 0x5511b8f4a751ea31, 0xe8e8ea9a47de6efa, 0x4f641d0f263a3632, 0x453c7a9c4cf84dde, 0xd3185d5d83e699ad,
        0x3e7f022dfb3e02f0, 0x0f9dafc765f4768e, 0x986d3314918985ff, 0x8bce8be6ab715f94, 0x1b07c021125fe0ab, 0xa7811d5dae94050a, 0x2699cafdc9e27475, 0xdc6357fdb7a4de2f,
        0xbafb63f8edfd8523, 0x1ed1d61c651fcd89, 0xd95e266d698143f9, 0xad7de16f1c5fc309, 0xba36b3d0384ee41c, 0xd03062373eb178ef, 0xfd0ed85ede58b743, 0xc87a0b9ea5593be2,
        0x8b6d1a02f585ed79, 0x4946ad143ef42924, 0xdef5f4391b0642bb, 0x9d2b63876fe0d31f, 0x53bf85fb35232b55, 0xf7133bf72636bba2, 0xb62714fc7ef72e5d, 0x928b28c6f09d69f4
    };

    static const uint64_t b0[] = {
        0xde81b0b5343c109c, 0xe3c9d45c55dd59d9, 0xa659fd6e8825481e, 0xf0ff831e644455e8, 0x4676d92e334e9ac9, 0x239a34564d467aff, 0xc1f0004a87ff8882, 0x51606d3a42ece4d4,
        0xcedab67e2495e8c7, 0x78e28a22f17826bc, 0x9d57cf261d68b81b, 0xb648fd0aba2adb56, 0x109764bd1ef579ac, 0xd77d248117f3eab6, 0x31bde2199e448b75, 0xab9c789d1c3a7aa9,
        0x1d6504e4950f3a68, 0x4479371ba06a72af, 0x911889d6fa745db2, 0xfd181e714e51c401, 0xee883fb39b39a05c, 0x9268be148529599f, 0x5f7e4a8e043190a8, 0x5d2ce779495fb6bb,
        0x6328410535ba1848, 0x5b0df7f5b50a19a1, 0x8a25e608e2060fdc, 0xded0f67eafdae364, 0x28c3ebc28c79410f, 0x84a5bdd8df90dada, 0x068c5cb988e81835, 0xcba7554cf3f78c94,
        0xf33ebd2ecf95e78f, 0xe38a5bebd54b4faa, 0x123440bccc65a471, 0xcd272b58774f1cbd, 0x471672d6b73a7d70, 0x4a307c8104b76cf7, 0x31c8c7e33268c0ec, 0x7bcc1dbfc89b9821,
        0x494dfeda4e306701, 0xb599130790537a7b, 0x5a46f55b2a795383, 0x33ca87f8adc1d494, 0xeceebdf9a65957a5, 0x93cdd20c5068d62d, 0xd869aa5020ceae85, 0xb09a1230c1242417,
        0x9f7cdc75cc0248e8, 0x98568da395742935, 0x5fbe682271a8b4f0, 0x2acfb1fc0b7d1191, 0xb40b6dce69b0820c, 0x5b456b3ecf8d59d7, 0x5ed1043f21b3a0f5, 0x7c373f32843466b4,
        0xfb9f640b28749fac, 0xfd5a87418b9624b2, 0xd37582ef2cb61e65, 0x060562836b8ffd2e, 0xcb3beb6bb8706e6b, 0x39ebbe4d38ee8447, 0x465a3a46400ac8fa, 0xd6261520c34e2f47
    };

    static const uint64_t m0[] = {
        0xdfa6a0e2cca6a4c1, 0x26bffbf71be0e05c, 0x6942463a8b21130b, 0xacc73f3dddddf625, 0x3c3c9c4c02374802, 0x82325504ce2a578f, 0x1b48ace286074fa3, 0xb00f29a391aa3147,
        0x2c1dbdf51ee198da, 0x504642ce6195aaca, 0xaeca871a8ec1a9a0, 0x57f0b974a8418e43, 0x0b295e6f64c8ed1c, 0xe5bdca38f8ee47fa, 0xbf2204553f8fb74e, 0xfd88babde187e4f7,
        0xa87ed279c859e83e, 0xbb7edf7394e1227b, 0x7a557d3fddbed69b, 0xa4e8edb071fef111, 0x9e7c7b33247c2030, 0x433188e6a70c10cd, 0x0cbbd0c6ba6fba5b, 0x24616af72a0ffa70,
        0x280d5979e2678433, 0x36abcfe59f9168d1, 0xa9eea747ce3092e6, 0xc747cd17de42d9ac, 0x170e2b4f7f0ab3e2, 0xb1e5f049d634b118, 0x49f54ae42c806b3b, 0x0cbab09f75aa94ba,
        0x4f3ad14ee8e84250, 0x87b764f16a5f3efe, 0xc7be348c68d557fd, 0x27415aa1dd6b1d7e, 0x5c97ef5c4b70d21a, 0x1be8338246ed53ec, 0x79b161242d6b5275, 0x954dd58974a5782f,
        0xf0d08b59f27f4e7e, 0x22a5af3b3aefe6ec, 0xd69c0dcd593e0968, 0xf6354e66f4c0c088, 0x0809b48f45c5b6b0, 0x76e79db5f2bca861, 0xf033e5fdf8416325, 0xd9b42753dcdbebf4,
        0x009298093177a93f, 0xd91c55d90a5e4d4c, 0xac3b8dbce000e871, 0xb201707c45019b99, 0x70879e69606e73dd, 0xe72d25b328d28cf1, 0xe67f379810aeba4f, 0x9729307f35f3bafb,
        0x9fc6d3f227a602bd, 0x9999a958e594a532, 0x9d841f8d0bd5dd9d, 0xf93d067fa4a2caa5, 0x90aec065318c559f, 0x08f5c5b9287c6077, 0x772321e443be1c5d, 0xe5eff43001e24145
    };

    static const uint64_t c0[] = {
        0x4dd0a0a5bc7d3e87, 0x170b28894659e0f5, 0x43e90585f7741353, 0x159eec0531ac4736, 0x24859c0b748bd27e, 0x0cf334eb23fc4c9b, 0x0281e99ae679e43a, 0x5b84156b1ac6d19d,
        0x21e87a3741654059, 0x1f8354496fc3d675, 0x3bd8dd83dac4962b, 0x33ea793625e4795e, 0x05729aa56793d1cd, 0x7b460ca7a077232c, 0x5f630abd978f9c99, 0xe7eed8820d4b9db8,
        0x0cceeebec6a29a2f, 0x382531e18a413ded, 0x1152259595323166, 0x3817e225fc0fbf1f, 0x11d8223d4f0cb6f0, 0x292a0054021ede18, 0x04f535a96609dcdb, 0x048045e329e78125,
        0x1aec1e84900ff7b0, 0x062c6deb4f9114ff, 0x7bcc5d5b7512f9e7, 0xb570d74a40f53700, 0x0dc5e6432bb235c8, 0x6a5ae3227ba964d8, 0x493c870988a8f8fb, 0x0a5aa3e85b5ec955,
        0x14f14d73ab68d0a5, 0x777e2f9e12ff3496, 0x31a54a5e9c4fcba7, 0x23e1299053157251, 0x0137ae139a471b6e, 0x0675c6deb249820c, 0x241c7dcfdfa294ac, 0x86b0cef65ffd2b67,
        0x47f479e83a98e840, 0x0e329eae41d05b9c, 0xc7c873b472aad917, 0x4b96e35c21f0a170, 0x0298b720d6e74c7b, 0x168dc2cdf781fe88, 0x26a7f8aa7e49f08e, 0xcbb038705650f0af,
        0x0053a7b1282d928b, 0x9c87e06a2c50a605, 0x7698a2d3c5f5ba11, 0xb1f2bbc6cacf72bc, 0x41a1a95ec0aea610, 0x920118e3547cbfca, 0x71cd3a205be8ece3, 0x726e9c152df4bcde,
        0x701529174fc34f63, 0x274033d509724854, 0x629c1dd7c293bba5, 0xf5ee3580090ef4e1, 0x17eeb5fe5297abbc, 0x028bfbeadbbe9f56, 0x17deb7f2734ff142, 0xc1bc80e6513d31dd
    };

#endif

    bool UIntPowerModuleTest0() {
        for (size_t i = 0; i < _countof(a0); ++i)
            if (accel::Math::UIntPowerModule(a0[i], b0[i], m0[i]) != c0[i])
                return false;
        return true;
    }

}

